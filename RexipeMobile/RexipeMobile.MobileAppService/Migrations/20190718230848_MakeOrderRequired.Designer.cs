// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RexipeMobile.MobileAppService.Data;

namespace RexipeMobile.MobileAppService.Migrations
{
    [DbContext(typeof(RexipeDbContext))]
    [Migration("20190718230848_MakeOrderRequired")]
    partial class MakeOrderRequired
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RexipeModels.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Bytes")
                        .IsRequired();

                    b.Property<string>("Caption");

                    b.Property<int?>("RecipeId");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("RexipeModels.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ImageId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("RexipeModels.IngredientQuantity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IngredientId");

                    b.Property<int>("Order");

                    b.Property<int?>("QuantityId");

                    b.Property<int?>("RecipeId");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("QuantityId");

                    b.HasIndex("RecipeId");

                    b.ToTable("IngredientQuantities");
                });

            modelBuilder.Entity("RexipeModels.ItemQuantity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Denominator");

                    b.Property<int>("Numerator");

                    b.Property<string>("OtherUnit");

                    b.Property<int>("Unit");

                    b.HasKey("Id");

                    b.ToTable("ItemQuantities");
                });

            modelBuilder.Entity("RexipeModels.NutritionInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Calories");

                    b.HasKey("Id");

                    b.ToTable("NutritionInfo");
                });

            modelBuilder.Entity("RexipeModels.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId");

                    b.Property<TimeSpan>("CookTime");

                    b.Property<int?>("NutritionInfoId");

                    b.Property<TimeSpan>("PrepTime");

                    b.Property<TimeSpan>("ReadyTime");

                    b.Property<int>("ServingsMax");

                    b.Property<int>("ServingsMin");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("NutritionInfoId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("RexipeModels.RecipeAuthor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("RecipeAuthors");
                });

            modelBuilder.Entity("RexipeModels.RecipeDirection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direction")
                        .IsRequired();

                    b.Property<int>("Order");

                    b.Property<int?>("RecipeId");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeDirections");
                });

            modelBuilder.Entity("RexipeModels.RecipeTip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ImageId");

                    b.Property<int>("Order");

                    b.Property<int?>("RecipeId");

                    b.Property<string>("Text")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ImageId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeTip");
                });

            modelBuilder.Entity("RexipeModels.Image", b =>
                {
                    b.HasOne("RexipeModels.Recipe")
                        .WithMany("Images")
                        .HasForeignKey("RecipeId");
                });

            modelBuilder.Entity("RexipeModels.Ingredient", b =>
                {
                    b.HasOne("RexipeModels.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");
                });

            modelBuilder.Entity("RexipeModels.IngredientQuantity", b =>
                {
                    b.HasOne("RexipeModels.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RexipeModels.ItemQuantity", "Quantity")
                        .WithMany()
                        .HasForeignKey("QuantityId");

                    b.HasOne("RexipeModels.Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId");
                });

            modelBuilder.Entity("RexipeModels.Recipe", b =>
                {
                    b.HasOne("RexipeModels.RecipeAuthor", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RexipeModels.NutritionInfo", "NutritionInfo")
                        .WithMany()
                        .HasForeignKey("NutritionInfoId");
                });

            modelBuilder.Entity("RexipeModels.RecipeDirection", b =>
                {
                    b.HasOne("RexipeModels.Recipe")
                        .WithMany("Directions")
                        .HasForeignKey("RecipeId");
                });

            modelBuilder.Entity("RexipeModels.RecipeTip", b =>
                {
                    b.HasOne("RexipeModels.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.HasOne("RexipeModels.Recipe")
                        .WithMany("Tips")
                        .HasForeignKey("RecipeId");
                });
#pragma warning restore 612, 618
        }
    }
}
